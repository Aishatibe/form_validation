{"ast":null,"code":"var _jsxFileName = \"/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const isNotEmpty = value => value !== \"\";\n  const isEmailAndNotEmpty = value => value !== \"\" && value.includes(\"@\");\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    valueHasError: firstNameHasError,\n    valueInputChangeHandler: firstNameChangeHandler,\n    valueInputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    valueHasError: lastNameHasError,\n    valueInputChangeHandler: lastNameChangeHandler,\n    valueInputBlurHandler: lastNameBlurHandler,\n    reset: resetName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueInputChangeHandler: emailChangeHandler,\n    valueInputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmailAndNotEmpty);\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const submitHandler = e => {\n    e.preventDefault();\n    resetEmail();\n    resetFirstName();\n    resetName();\n  };\n  const fNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const eNameClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: fNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"First name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Last name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: eNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must contain \\\"@\\\" and must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"yPlufbQgXYQixTS8V8w7irzD6zc=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","isNotEmpty","value","isEmailAndNotEmpty","includes","enteredFirstName","isValid","firstNameIsValid","valueHasError","firstNameHasError","valueInputChangeHandler","firstNameChangeHandler","valueInputBlurHandler","firstNameBlurHandler","reset","resetFirstName","enteredLastName","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetName","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","submitHandler","e","preventDefault","fNameClasses","lNameClasses","eNameClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = (value) => value !== \"\";\n  const isEmailAndNotEmpty = (value) => value !== \"\" && value.includes(\"@\");\n\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    valueHasError: firstNameHasError,\n    valueInputChangeHandler: firstNameChangeHandler,\n    valueInputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    valueHasError: lastNameHasError,\n    valueInputChangeHandler: lastNameChangeHandler,\n    valueInputBlurHandler: lastNameBlurHandler,\n    reset: resetName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueInputChangeHandler: emailChangeHandler,\n    valueInputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmailAndNotEmpty);\n\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    resetEmail();\n    resetFirstName();\n    resetName();\n  };\n\n  const fNameClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lNameClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const eNameClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={fNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n        </div>\n        {firstNameHasError && (\n          <p className=\"error-text\">First name must not be empty</p>\n        )}\n        <div className={lNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n        </div>\n        {lastNameHasError && (\n          <p className=\"error-text\">Last name must not be empty</p>\n        )}\n      </div>\n      <div className={eNameClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n      </div>\n      {emailHasError && (\n        <p className=\"error-text\">\n          Email must contain \"@\" and must not be empty\n        </p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}