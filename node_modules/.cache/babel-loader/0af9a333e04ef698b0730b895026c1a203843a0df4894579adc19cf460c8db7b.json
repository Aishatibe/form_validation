{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useReducer, useState } from \"react\";\nconst initialState = {\n  inputValue: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      inputValue: action.inputValue,\n      isTouched: state.isTouched\n    };\n  }\n  if (action.type === \"BLUR\") {\n    return {\n      inputValue: state.inputValue,\n      isTouched: true\n    };\n  }\n  if (action.type === \"RESET\") {\n    return initialState;\n  }\n  return state;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, inputDispatch] = useReducer(inputStateReducer, initialState);\n\n  //const [enteredValue, setEnteredValue] = useState(\"\");\n  // const [isTouched, setIsTouched] = useState(false);\n\n  //const valueIsValid = validateValue(enteredValue);\n  // const valueHasError = !valueIsValid && isTouched;\n\n  const valueIsValid = validateValue(inputState.inputValue);\n  const valueHasError = !valueIsValid && inputState.isTouched;\n  const valueInputChangeHandler = event => {\n    inputDispatch({\n      type: 'INPUT',\n      inputValue: event.target.value\n    });\n    //setEnteredValue(event.target.value);\n  };\n\n  const valueInputBlurHandler = event => {\n    inputDispatch({\n      type: \"BLUR\"\n    });\n    //setIsTouched(true);\n  };\n\n  const reset = () => {\n    inputDispatch({\n      type: \"RESET\"\n    });\n    // setEnteredValue(\"\");\n    // setIsTouched(false);\n  };\n\n  return {\n    //value: enteredValue,\n    value: inputState.inputValue,\n    isValid: valueIsValid,\n    valueHasError,\n    valueInputChangeHandler,\n    valueInputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"SjX0Wqi5cdiuMwW50de7uUrXYT8=\");\nexport default useInput;","map":{"version":3,"names":["React","useReducer","useState","initialState","inputValue","isTouched","inputStateReducer","state","action","type","useInput","validateValue","_s","inputState","inputDispatch","valueIsValid","valueHasError","valueInputChangeHandler","event","target","value","valueInputBlurHandler","reset","isValid"],"sources":["/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/hooks/use-input.js"],"sourcesContent":["import React, {useReducer, useState } from \"react\";\n\nconst initialState = {\n  inputValue : \"\",\n  isTouched : false\n}\n\nconst inputStateReducer = (state, action) => {\nif(action.type === \"INPUT\"){\n  return {\n    inputValue:action.inputValue,\n    isTouched:state.isTouched\n  }\n}\n  if(action.type === \"BLUR\"){\n    return {\n     inputValue:state.inputValue,\n      isTouched:true\n    }\n}\nif(action.type === \"RESET\"){\n  return initialState;\n}\n  return state\n}\n\n\nconst useInput = (validateValue) => {\n\n\nconst [inputState, inputDispatch] = useReducer(inputStateReducer, initialState);\n\n  //const [enteredValue, setEnteredValue] = useState(\"\");\n // const [isTouched, setIsTouched] = useState(false);\n\n  //const valueIsValid = validateValue(enteredValue);\n // const valueHasError = !valueIsValid && isTouched;\n\n  const valueIsValid = validateValue(inputState.inputValue)\n  const valueHasError = !valueIsValid && inputState.isTouched;\n\n  const valueInputChangeHandler = (event) => {\n    inputDispatch({type:'INPUT', inputValue:event.target.value})\n    //setEnteredValue(event.target.value);\n  };\n\n  const valueInputBlurHandler = (event) => {\n    inputDispatch({type:\"BLUR\"})\n    //setIsTouched(true);\n  };\n\n  const reset = () => {\n    inputDispatch({type:\"RESET\"})\n   // setEnteredValue(\"\");\n   // setIsTouched(false);\n  };\n  return {\n    //value: enteredValue,\n    value:inputState.inputValue,\n    isValid: valueIsValid,\n    valueHasError,\n    valueInputChangeHandler,\n    valueInputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAElD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAG,EAAE;EACfC,SAAS,EAAG;AACd,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7C,IAAGA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAC;IACzB,OAAO;MACLL,UAAU,EAACI,MAAM,CAACJ,UAAU;MAC5BC,SAAS,EAACE,KAAK,CAACF;IAClB,CAAC;EACH;EACE,IAAGG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAC;IACxB,OAAO;MACNL,UAAU,EAACG,KAAK,CAACH,UAAU;MAC1BC,SAAS,EAAC;IACZ,CAAC;EACL;EACA,IAAGG,MAAM,CAACC,IAAI,KAAK,OAAO,EAAC;IACzB,OAAON,YAAY;EACrB;EACE,OAAOI,KAAK;AACd,CAAC;AAGD,MAAMG,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAGpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,UAAU,CAACK,iBAAiB,EAAEH,YAAY,CAAC;;EAE7E;EACD;;EAEC;EACD;;EAEC,MAAMY,YAAY,GAAGJ,aAAa,CAACE,UAAU,CAACT,UAAU,CAAC;EACzD,MAAMY,aAAa,GAAG,CAACD,YAAY,IAAIF,UAAU,CAACR,SAAS;EAE3D,MAAMY,uBAAuB,GAAIC,KAAK,IAAK;IACzCJ,aAAa,CAAC;MAACL,IAAI,EAAC,OAAO;MAAEL,UAAU,EAACc,KAAK,CAACC,MAAM,CAACC;IAAK,CAAC,CAAC;IAC5D;EACF,CAAC;;EAED,MAAMC,qBAAqB,GAAIH,KAAK,IAAK;IACvCJ,aAAa,CAAC;MAACL,IAAI,EAAC;IAAM,CAAC,CAAC;IAC5B;EACF,CAAC;;EAED,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAClBR,aAAa,CAAC;MAACL,IAAI,EAAC;IAAO,CAAC,CAAC;IAC9B;IACA;EACD,CAAC;;EACD,OAAO;IACL;IACAW,KAAK,EAACP,UAAU,CAACT,UAAU;IAC3BmB,OAAO,EAAER,YAAY;IACrBC,aAAa;IACbC,uBAAuB;IACvBI,qBAAqB;IACrBC;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CAtCIF,QAAQ;AAwCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}