{"ast":null,"code":"var _jsxFileName = \"/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    valueHasError: nameHasError,\n    valueInputChangeHandler: nameChangeHandler,\n    valueInputBlurHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueInputChangeHandler: emailChangeHandler,\n    valueInputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.trim() !== \"\" && value.includes(\"@\"));\n\n  /*  const emailIsValid = email.trim() !== \"\" && email.includes(\"@\");\n  const emailInputIsInvalid = !emailIsValid && emailIsTouched; */\n\n  let formIsValid = false;\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  console.log(\"name has error \" + nameHasError);\n  /* const emailInputChangeHandler = (e) => {\n    setEmail(e.target.value);\n  };\n  const emailInputBlurHandler = (e) => {\n    setEmailIsTouched(true);\n  }; */\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    // setEnteredNameTouched(true);\n\n    if (!nameIsValid) {\n      return;\n    }\n\n    //console.log(enteredName);\n\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    //setEnteredName(\"\");\n    resetName();\n    resetEmail();\n    // setEmail(\"\");\n    // setEnteredNameTouched(false);\n    //setEmailIsTouched(false);\n  };\n\n  const nameInputClasses = nameHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email field must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"lCiaK8pQQvdm735gybSlQg01zKM=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","email","setEmail","emailIsTouched","setEmailIsTouched","value","enteredName","isValid","nameIsValid","valueHasError","nameHasError","valueInputChangeHandler","nameChangeHandler","valueInputBlurHandler","nameBlurHandler","reset","resetName","trim","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","includes","formIsValid","console","log","formSubmissionHandler","event","preventDefault","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    valueHasError: nameHasError,\n    valueInputChangeHandler: nameChangeHandler,\n    valueInputBlurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    valueHasError: emailHasError,\n    valueInputChangeHandler: emailChangeHandler,\n    valueInputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((value) => value.trim() !== \"\" && value.includes(\"@\"));\n\n  /*  const emailIsValid = email.trim() !== \"\" && email.includes(\"@\");\n  const emailInputIsInvalid = !emailIsValid && emailIsTouched; */\n\n  let formIsValid = false;\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  console.log(\"name has error \" + nameHasError);\n  /* const emailInputChangeHandler = (e) => {\n    setEmail(e.target.value);\n  };\n  const emailInputBlurHandler = (e) => {\n    setEmailIsTouched(true);\n  }; */\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    // setEnteredNameTouched(true);\n\n    if (!nameIsValid) {\n      return;\n    }\n\n    //console.log(enteredName);\n\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    //setEnteredName(\"\");\n    resetName();\n    resetEmail();\n    // setEmail(\"\");\n    // setEnteredNameTouched(false);\n    //setEmailIsTouched(false);\n  };\n\n  const nameInputClasses = nameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameHasError && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasError && (\n          <p className=\"error-text\">Email field must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM;IACJW,KAAK,EAAEC,WAAW;IAClBC,OAAO,EAAEC,WAAW;IACpBC,aAAa,EAAEC,YAAY;IAC3BC,uBAAuB,EAAEC,iBAAiB;IAC1CC,qBAAqB,EAAEC,eAAe;IACtCC,KAAK,EAAEC;EACT,CAAC,GAAGrB,QAAQ,CAAEU,KAAK,IAAKA,KAAK,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAE5C,MAAM;IACJZ,KAAK,EAAEa,YAAY;IACnBX,OAAO,EAAEY,YAAY;IACrBV,aAAa,EAAEW,aAAa;IAC5BT,uBAAuB,EAAEU,kBAAkB;IAC3CR,qBAAqB,EAAES,gBAAgB;IACvCP,KAAK,EAAEQ;EACT,CAAC,GAAG5B,QAAQ,CAAEU,KAAK,IAAKA,KAAK,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIZ,KAAK,CAACmB,QAAQ,CAAC,GAAG,CAAC,CAAC;;EAEnE;AACF;;EAEE,IAAIC,WAAW,GAAG,KAAK;EACvB,IAAIjB,WAAW,IAAIW,YAAY,EAAE;IAC/BM,WAAW,GAAG,IAAI;EACpB;EACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGjB,YAAY,CAAC;EAC7C;AACF;AACA;AACA;AACA;AACA;;EAEE,MAAMkB,qBAAqB,GAAIC,KAAK,IAAK;IACvCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;;IAEA,IAAI,CAACtB,WAAW,EAAE;MAChB;IACF;;IAEA;;IAEA;IACA;IACAQ,SAAS,CAAC,CAAC;IACXO,UAAU,CAAC,CAAC;IACZ;IACA;IACA;EACF,CAAC;;EAED,MAAMQ,gBAAgB,GAAGrB,YAAY,GACjC,sBAAsB,GACtB,cAAc;EAElB,oBACEb,OAAA;IAAMmC,QAAQ,EAAEJ,qBAAsB;IAAAK,QAAA,gBACpCpC,OAAA;MAAKqC,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BpC,OAAA;QAAOsC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC1C,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAE9B,iBAAkB;QAC5B+B,MAAM,EAAE7B,eAAgB;QACxBT,KAAK,EAAEC;MAAY;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,EACD7B,YAAY,iBAAIb,OAAA;QAAGqC,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eAEN1C,OAAA;MAAKqC,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BpC,OAAA;QAAOsC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnC1C,OAAA;QACE2C,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVC,QAAQ,EAAErB,kBAAmB;QAC7BsB,MAAM,EAAErB,gBAAiB;QACzBjB,KAAK,EAAEa;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EACDnB,aAAa,iBACZvB,OAAA;QAAGqC,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAA8B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN1C,OAAA;MAAKqC,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BpC,OAAA;QAAQ+C,QAAQ,EAAE,CAACnB,WAAY;QAAAQ,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACvC,EAAA,CA7FIF,WAAW;EAAA,QAWXH,QAAQ,EASRA,QAAQ;AAAA;AAAAkD,EAAA,GApBR/C,WAAW;AA+FjB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}