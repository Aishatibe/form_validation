{"ast":null,"code":"var _jsxFileName = \"/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [inputFocus, setInputFocus] = useState(false);\n  const nameInputRef = useRef();\n  const nameChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n  const nameFocusHandler = () => {\n    setInputFocus(true);\n    if (enteredName === \"\") {\n      setFormIsValid(false);\n    }\n  };\n  const formInputIsValid = !formIsValid && inputFocus;\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredValue = nameInputRef.current.value;\n    setInputFocus(true);\n    if (enteredName.trim() === \"\") {\n      setFormIsValid(false);\n    }\n    console.log(enteredName, enteredValue);\n    setFormIsValid(false);\n  };\n  const nameInputClasses = formInputIsValid ? \"form-control invalid\" : \"form-control\";\n  console.log(\"focus\" + inputFocus);\n  console.log(\"form input is valid\" + formInputIsValid);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameFocusHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), formInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name field cannot be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"/+Tz8yLbRLVh3o0LTJ32EMPyUsE=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","formIsValid","setFormIsValid","inputFocus","setInputFocus","nameInputRef","nameChangeHandler","e","target","value","nameFocusHandler","formInputIsValid","submitHandler","preventDefault","enteredValue","current","trim","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["/Users/Aishat/Desktop/PERSONAL/react/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition/Section 17 Working with Forms & User Input/code/forms_inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [inputFocus, setInputFocus] = useState(false);\n  const nameInputRef = useRef();\n\n  const nameChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  };\n  const nameFocusHandler = () => {\n    setInputFocus(true);\n    if (enteredName === \"\") {\n      setFormIsValid(false);\n    }\n  };\n  const formInputIsValid = !formIsValid && inputFocus;\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const enteredValue = nameInputRef.current.value;\n    setInputFocus(true);\n    if (enteredName.trim() === \"\") {\n      setFormIsValid(false);\n    }\n    console.log(enteredName, enteredValue);\n    setFormIsValid(false);\n  };\n  const nameInputClasses = formInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  console.log(\"focus\" + inputFocus);\n  console.log(\"form input is valid\" + formInputIsValid);\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameFocusHandler}\n        />\n        {formInputIsValid && (\n          <p className=\"error-text\">Name field cannot be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}